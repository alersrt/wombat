networks:
  internal-network:

volumes:
  kafka-volume:
  postgres-volume:
  jira-volume:

services:

  postgres:
    image: postgres:15
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/sql/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
      - postgres-volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_INITDB_ARGS="--auth-host=md5"
    healthcheck:
      test: pg_isready -U postgres -d postgres
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - internal-network

  flyway-wombatsm:
    image: redgate/flyway
    command: migrate info
    volumes:
      - ../db/changelog/:/flyway/sql:ro
    environment:
      - FLYWAY_URL=jdbc:postgresql://postgres:5432/postgres
      - FLYWAY_USER=postgres
      - FLYWAY_PASSWORD=postgres
    networks:
      - internal-network
    depends_on:
      postgres:
        condition: service_healthy

  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,HOST:PLAINTEXT
      - KAFKA_LISTENERS=DOCKER://kafka:29092,CONTROLLER://kafka:29093,HOST://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=DOCKER://kafka:29092,HOST://localhost:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=DOCKER
      - ALLOW_PLAINTEXT_LISTENER=yes
      # Setup in KRaft
      - KAFKA_BROKER_ID=1
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka:29093
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      # Cluster
      - CLUSTER_ID=AAAAAAAAAAAAAAAAAAAAAA
      # Broker config
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - kafka-volume:/var/lib/kafka/data
    ports:
      - "9092:9092"
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 5s
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - internal-network

  kafka-ui:
    image: ghcr.io/kafbat/kafka-ui:latest
    environment:
      - DYNAMIC_CONFIG_ENABLED=true
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
    ports:
      - "8082:8080"
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - internal-network

  jira:
    image: atlassian/jira-core:latest
    environment:
      - ATL_DB_TYPE=postgres72
      - ATL_DB_DRIVER=org.postgresql.Driver
      - ATL_DB_SCHEMA_NAME=jirasm
      - ATL_JDBC_USER=postgres
      - ATL_JDBC_PASSWORD=postgres
      - ATL_JDBC_URL=jdbc:postgresql://postgres:5432/postgres
      - ATL_LICENSE_KEY=AAAB8w0ODAoPeNp9Uk2P2jAQvedXWOoNydmELVKLFKlL4u7SLglKQj+27cEkA3gb7GjssMu/rwnQls9DDvHMvPfmvXmTN0BGfE08n3jdftfv927J/SgnXc9/58wRQC5UXQO6j6IAqYGVwgglAxbnLB2nw4w5cbOcAiaziQbUge85oZKGFybmSwjKmiMKvfjATcW1Fly6hVo64waLBdcQcQPBhot6Per5zo4lX9fQjofJaMTScHj3uC+x11rgup0b3z7sudiIi+oSWQa4AhxGweD+fU6/Tb68pZ+fnh7owPO/Os8CuVujKpvCuJsfqtXMvHAE1+KKFQQGG3A+2cp412XJeQjSHLVkzVQXKOrWn/bljH/nNmslXPa30+nESU4/Jikdp0k0CfNhEtNJxmwhCBGsFSWZrolZANmhECYLVQISu9gzFIb8WBhT/+zf3MyVe2DOTbWdoLCd+OWSSBGpDCmFNiimjQGLLDQxihSNNmppU3Yd67c0ILksjhOxqsKU3eUsooPvG4kXUrli/MlF7dayEU7kb6lepJOxOLAf7XneFmkfCuCp95nh+LdwhfegL8E5l0LzNo4IVlApi0Vy0GZvs9O6b+vHZxzBv0toB3Yuk5lCwuualHs8fSD0/3NqdZ48nBd+5bjYilfNdokZr6zmP7TmY5YwLAIUNq8MbmR8GfaV9ulfLz1K+3g9j1YCFDeq7aYROMQbwMIvHimNt7/bJCCIX02nj
      - VERBOSE_LOGS=false
      - JVM_MAXIMUM_MEMORY=2G
    volumes:
      - jira-volume:/var/atlassian/application-data/jira
      - ./jira/jira-config.properties:/var/atlassian/application-data/jira/jira-config.properties:ro
    ports:
      - "8083:8080"
    healthcheck:
      test: nc -z localhost 8080 || exit -1
      start_period: 5s
      interval: 5s
      timeout: 3s
      retries: 30
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - internal-network

#  flyway-jirasm:
#    image: redgate/flyway
#    command: migrate info
#    volumes:
#      - ../docker/jira/:/flyway/sql:ro
#    environment:
#      - FLYWAY_URL=jdbc:postgresql://postgres:5432/postgres
#      - FLYWAY_USER=postgres
#      - FLYWAY_PASSWORD=postgres
#    networks:
#      - internal-network
#    depends_on:
#      jira:
#        condition: service_healthy
